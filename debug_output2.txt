============================= test session starts =============================
platform win32 -- Python 3.11.7, pytest-8.4.0, pluggy-1.6.0 -- C:\Users\flori\AppData\Local\Programs\Python\Python311\python.exe
cachedir: .pytest_cache
rootdir: C:\Bachelorarbeit\Translate_Cora
configfile: pytest.ini
plugins: anyio-4.9.0, mock-3.14.1
collecting ... collected 1 item

cora_python/tests/contSet/ellipsoid/private/test_priv_andHyperplane.py::TestPrivAndHyperplane::test_full_intersection_non_degenerate_2d [DEBUG] priv_andHyperplane: dist_val = -1.0, E.TOL = 1e-06
[DEBUG] E_rotated.q[0,0] = 0.0
[DEBUG] m11 = 1.0000000000000002
[DEBUG] mb = [[-1.00875766e-16]]
[DEBUG] Mbinv = [[1.]]
[DEBUG] mb.T @ Mbinv @ mb = [[1.01759202e-32]]
[DEBUG] m11 - mb.T @ Mbinv @ mb = [[1.]]
[DEBUG] computed a = 1.0
[DEBUG] W_s = [[0. 0.]
 [0. 1.]]
[DEBUG] w_s = [[0.]
 [0.]]
[DEBUG] a = 1.0
[DEBUG] Ew.Q = [[0. 0.]
 [0. 1.]]
[DEBUG] Ew.q = [[0.]
 [0.]]
[DEBUG] After back-rotation E_t.Q = [[ 0.5 -0.5]
 [-0.5  0.5]]
[DEBUG] After back-rotation E_t.q = [[0.]
 [0.]]
[DEBUG] Final E_t.Q = [[ 0.5 -0.5]
 [-0.5  0.5]]
[DEBUG] Final E_t.q = [[0.]
 [0.]]
FAILED

================================== FAILURES ===================================
_______ TestPrivAndHyperplane.test_full_intersection_non_degenerate_2d ________

self = <test_priv_andHyperplane.TestPrivAndHyperplane object at 0x00000128BDB64510>

    def test_full_intersection_non_degenerate_2d(self):
        # Ellipsoid at origin, Q=I
        E = Ellipsoid(np.eye(2), np.zeros((2, 1)), 1e-6)
        # Hyperplane x + y = 0 (passes through origin)
        P = Polytope(np.array([[]]).reshape(0,2), np.array([[]]).reshape(0,1), np.array([[1, 1]]), np.array([[0]]))
    
        result_E = priv_andHyperplane(E, P)
        # Expected: A degenerate ellipsoid (a line segment) with new Q and q
        # For x+y=0, x=-y. Q = [[1,0],[0,1]], q=[[0],[0]]
        # Intersection will be x^2+y^2 <= 1 and x=-y => 2x^2 <= 1 => x^2 <= 0.5
        # This should be an ellipsoid with radius sqrt(0.5) in the direction [1,-1]
        # The resulting ellipsoid will be 1D within the 2D space.
    
        assert not result_E.isemptyobject()
        assert result_E.dim() == 2 # Still in 2D space
        assert result_E.rank() == 1 # Degenerate to 1D
    
        # Check if center is origin
        assert np.allclose(result_E.q, np.zeros((2,1)), atol=1e-9)
    
        # Check if the primary axis matches [1/sqrt(2), -1/sqrt(2)] direction
        # And the radius in that direction is sqrt(0.5)
        # E.Q should have one non-zero eigenvalue corresponding to this axis.
        evals, evecs = np.linalg.eigh(result_E.Q)
        # Find the non-zero eigenvalue and its eigenvector
        non_zero_eval_idx = np.argmax(np.abs(evals))
>       assert np.isclose(evals[non_zero_eval_idx], 0.5, atol=1e-9) # (radius)^2
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       assert False
E        +  where False = <function isclose at 0x00000128F0648470>(1.0, 0.5, atol=1e-09)
E        +    where <function isclose at 0x00000128F0648470> = np.isclose

cora_python\tests\contSet\ellipsoid\private\test_priv_andHyperplane.py:45: AssertionError
=========================== short test summary info ===========================
FAILED cora_python/tests/contSet/ellipsoid/private/test_priv_andHyperplane.py::TestPrivAndHyperplane::test_full_intersection_non_degenerate_2d
============================= 1 failed in 15.58s ==============================
